{"version":3,"file":"static/js/909.5d65e35e.chunk.js","mappings":"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","sources":["components/Stepper.tsx","components/common/Button.tsx","components/product/Product.tsx","components/product/ProductList.tsx","hooks/useMutation.ts","hooks/useUpdateCart.ts","utils/localeString.ts"],"sourcesContent":["import { ChangeEvent } from 'react';\n\nimport { styled } from 'styled-components';\n\nimport { useUpdateCart } from '../hooks/useUpdateCart';\n\nimport { Button } from './common/Button';\n\nimport { QUANTITY } from '../constants';\n\ninterface Props {\n  cartId: number;\n  quantity: number;\n}\n\nexport const Stepper = ({ cartId, quantity }: Props) => {\n  const { increaseProductQuantity, decreaseProductQuantity, updateProductQuantity } =\n    useUpdateCart();\n\n  const onClickPlusButton = () => {\n    if (quantity === QUANTITY.MAX) return;\n\n    increaseProductQuantity(cartId, quantity + 1);\n  };\n\n  const onClickMinusButton = () => {\n    if (quantity === QUANTITY.MIN) return;\n\n    decreaseProductQuantity(cartId, quantity - 1);\n  };\n\n  const onChangeQuantity = ({ target: { value } }: ChangeEvent<HTMLInputElement>) => {\n    updateProductQuantity(cartId, Number(value) || 1);\n  };\n\n  return (\n    <Style.Container>\n      <Button designType=\"square\" disabled={quantity === QUANTITY.MIN} onClick={onClickMinusButton}>\n        -\n      </Button>\n      <Style.CountInput value={quantity} onChange={onChangeQuantity} />\n      <Button designType=\"square\" disabled={quantity === QUANTITY.MAX} onClick={onClickPlusButton}>\n        +\n      </Button>\n    </Style.Container>\n  );\n};\n\nconst Style = {\n  Container: styled.div`\n    display: flex;\n\n    width: 80px;\n    height: 30px;\n    background-color: var(--grey-100);\n    border: 1px solid var(--grey-200);\n    border-radius: 7px;\n\n    & > * {\n      flex: 1;\n    }\n  `,\n\n  CountInput: styled.input`\n    border: none;\n    width: 0;\n\n    text-align: center;\n\n    &:focus {\n      outline: none;\n    }\n  `,\n};\n","import { ButtonHTMLAttributes } from 'react';\n\nimport { styled } from 'styled-components';\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  bgColor: 'primary';\n  designType: 'square' | 'rectangle';\n}\n\nexport const Button = ({ bgColor, designType, disabled, ...props }: Partial<Props>) => {\n  return (\n    <Style.Button className={designType} {...props} disabled={disabled}>\n      {props.children}\n    </Style.Button>\n  );\n};\n\nconst Style = {\n  Button: styled.button<Partial<Props>>`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    border: none;\n\n    background-color: inherit;\n    color: var(--grey-100);\n\n    cursor: pointer;\n\n    &.square {\n      border-radius: 7px;\n\n      color: var(--grey-600);\n    }\n\n    &.rectangle {\n      width: 280px;\n      height: 73px;\n\n      border: ${(props) => props.bgColor ?? 'solid 1px var(--grey-300)'};\n      background-color: ${(props) => props.bgColor ?? 'var(--primary-color)'};\n\n      color: ${(props) => props.bgColor ?? 'var(--grey-100)'};\n\n      font-size: 24px;\n\n      @media screen and (max-width: 501px) {\n        width: 75px;\n        height: 100%;\n\n        color: var(--grey-100);\n\n        font-size: 14px;\n        font-weight: 600;\n\n        border: none;\n        border-radius: 10px;\n      }\n    }\n\n    &:disabled {\n      color: var(--grey-300);\n    }\n  `,\n};\n","import { styled } from 'styled-components';\nimport { CartIcon } from '../../assets/svg';\n\nimport { useCartItemValue, useSetCartState } from '../../recoils/recoilCart';\n\nimport { Stepper } from '../Stepper';\nimport { ProductType } from '../../types';\nimport { useMutation } from '../../hooks/useMutation';\nimport { FETCH_METHOD, FETCH_URL, LOCALE } from '../../constants';\nimport { useApiBaseUrlValue } from '../../recoils/recoilApiBaseUrl';\nimport { useEffect } from 'react';\nimport { useSetCheckedState } from '../../recoils/recoilChecked';\nimport { localeString } from '../../utils/localeString';\n\ninterface Props {\n  item: ProductType;\n}\n\nexport const Product = ({ item }: Props) => {\n  const baseUrl = useApiBaseUrlValue();\n  const { mutation: addCartMutation, data: addCartResponseData } = useMutation(FETCH_METHOD.POST);\n\n  const cartItem = useCartItemValue(item.id);\n\n  const setCheckedState = useSetCheckedState();\n\n  useEffect(() => {\n    if (!addCartResponseData) return;\n\n    const cartId = addCartResponseData.cartItemId;\n\n    setCart((prev) => [\n      ...prev,\n      {\n        id: Number(cartId),\n        quantity: 1,\n        product: item,\n      },\n    ]);\n\n    setCheckedState((prev) => {\n      return {\n        ...prev,\n        [cartId]: true,\n      };\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addCartResponseData]);\n\n  const setCart = useSetCartState();\n\n  const onClickCartIcon = () => {\n    addCartMutation(baseUrl + FETCH_URL.CART_ITEMS, {\n      productId: item.id,\n    });\n  };\n\n  return (\n    <Style.Container>\n      <Style.ProductImage path={item.imageUrl} />\n      <Style.ProductInfo>\n        <div>\n          <Style.ProductName>{item.name}</Style.ProductName>\n          <Style.ProductPrice>{localeString(item.price, LOCALE.KOREA)}원</Style.ProductPrice>\n        </div>\n        {cartItem ? (\n          <Style.StepperWrapper>\n            <Stepper cartId={cartItem.id} quantity={cartItem.quantity || 1} />\n          </Style.StepperWrapper>\n        ) : (\n          <Style.CartIconWrapper onClick={onClickCartIcon}>\n            <CartIcon fill=\"#AAAAAA\" />\n          </Style.CartIconWrapper>\n        )}\n      </Style.ProductInfo>\n    </Style.Container>\n  );\n};\n\nconst Style = {\n  Container: styled.li`\n    width: 282px;\n  `,\n\n  ProductImage: styled.div<{ path: string }>`\n    width: 100%;\n    padding-bottom: 100%;\n\n    background-image: ${(props) => `url(${props.path})`};\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n  `,\n\n  ProductInfo: styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    padding: 18px 12px 0 12px;\n    letter-spacing: 0.5px;\n  `,\n\n  ProductName: styled.p`\n    margin-bottom: 8px;\n  `,\n\n  ProductPrice: styled.p`\n    font-size: 20px;\n  `,\n\n  StepperWrapper: styled.div``,\n\n  CartIconWrapper: styled.button`\n    padding: 0;\n    margin: 0;\n    border: none;\n    background-color: inherit;\n    height: fit-content;\n\n    cursor: pointer;\n  `,\n};\n","import { styled } from 'styled-components';\n\nimport { useQuery } from '../../hooks/useQuery';\nimport { useApiBaseUrlValue } from '../../recoils/recoilApiBaseUrl';\n\nimport { Product } from './Product';\n\nimport { ProductType as IProduct } from '../../types';\nimport { FETCH_URL } from '../../constants';\n\nconst ProductList = () => {\n  const baseUrl = useApiBaseUrlValue();\n  const { data: products } = useQuery<IProduct[]>(baseUrl + FETCH_URL.PRODUCTS, false);\n\n  return (\n    <Style.Container>\n      {products?.map((product) => (\n        <Product key={product.id} item={product} />\n      ))}\n    </Style.Container>\n  );\n};\n\nconst Style = {\n  Container: styled.ul`\n    display: grid;\n\n    padding-bottom: 45px;\n\n    grid-template-columns: repeat(4, 1fr);\n    gap: 80px 46px;\n\n    @media (max-width: 1300px) {\n      grid-template-columns: repeat(3, 1fr);\n    }\n\n    @media (max-width: 1023px) {\n      grid-template-columns: repeat(2, 1fr);\n    }\n\n    @media (max-width: 679px) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  `,\n};\n\nexport default ProductList;\n","import { useCallback, useState } from 'react';\n\ninterface UseMutationState {\n  data?: any;\n  error?: object;\n}\n\nexport const useMutation = (method: string) => {\n  const [state, setState] = useState<UseMutationState>({});\n\n  const { data, error } = state;\n\n  const mutation = useCallback(\n    async (url: string, bodyData?: object) => {\n      try {\n        const response = await fetch(url, {\n          method,\n          headers: {\n            Authorization: `Basic ${btoa(process.env.REACT_APP_API_CREDENTIAL!)}`,\n            'Content-Type': 'application/json',\n          },\n          ...(bodyData && { body: JSON.stringify(bodyData) }),\n        });\n\n        if (response.ok && method === 'POST') {\n          const body = await response.json();\n          setState((prev) => ({ ...prev, data: body }));\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    [method]\n  );\n\n  return { mutation, data, error };\n};\n","import { useSetCartState } from '../recoils/recoilCart';\nimport { useMutation } from './useMutation';\nimport { useApiBaseUrlValue } from '../recoils/recoilApiBaseUrl';\n\nimport { FETCH_METHOD, FETCH_URL, QUANTITY } from '../constants';\n\nexport const useUpdateCart = () => {\n  const baseUrl = useApiBaseUrlValue();\n\n  const { mutation: updateQuantityMutation } = useMutation(FETCH_METHOD.PATCH);\n  const { mutation: deleteCartMutation } = useMutation(FETCH_METHOD.DELETE);\n\n  const setCart = useSetCartState();\n\n  const increaseProductQuantity = (cartItemId: number, quantity: number) => {\n    setCart((prev) => {\n      return prev.map((item) => {\n        if (item.id === cartItemId) return { ...item, quantity };\n\n        return item;\n      });\n    });\n\n    updateQuantityMutation(`${baseUrl + FETCH_URL.CART_ITEMS}/${cartItemId}`, {\n      quantity,\n    });\n  };\n\n  const decreaseProductQuantity = (cartItemId: number, quantity: number) => {\n    setCart((prev) => {\n      return prev.map((item) => {\n        if (item.id === cartItemId) return { ...item, quantity };\n\n        return item;\n      });\n    });\n\n    updateQuantityMutation(`${baseUrl + FETCH_URL.CART_ITEMS}/${cartItemId}`, {\n      quantity,\n    });\n  };\n\n  const updateProductQuantity = (cartItemId: number, quantity: number) => {\n    const count = quantity > QUANTITY.MAX ? QUANTITY.MAX : quantity;\n\n    setCart((prev) => {\n      return prev.map((item) => {\n        if (item.id === cartItemId) {\n          return { ...item, quantity: count };\n        }\n        return item;\n      });\n    });\n\n    updateQuantityMutation(`${baseUrl + FETCH_URL.CART_ITEMS}/${cartItemId}`, {\n      quantity: count,\n    });\n  };\n\n  const deleteCartItem = (...cartId: number[]) => {\n    setCart((prev) => {\n      return prev.filter((item) => {\n        return !cartId.includes(item.id);\n      });\n    });\n\n    cartId.forEach((id) => {\n      deleteCartMutation(`${baseUrl + FETCH_URL.CART_ITEMS}/${id}`);\n    });\n  };\n\n  return {\n    // addProductToCart,\n    deleteCartItem,\n    increaseProductQuantity,\n    decreaseProductQuantity,\n    updateProductQuantity,\n  };\n};\n","export const localeString = (value: number, country: string) => {\n    return value.toLocaleString(country)\n  };"],"names":["Stepper","_ref","cartId","quantity","_useUpdateCart","useUpdateCart","increaseProductQuantity","decreaseProductQuantity","updateProductQuantity","_jsxs","Style","Container","children","_jsx","Button","designType","disabled","QUANTITY","onClick","CountInput","value","onChange","_ref2","target","Number","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","bgColor","props","_objectWithoutProperties","_excluded","_objectSpread","className","_props$bgColor","_props$bgColor2","_props$bgColor3","Product","item","baseUrl","useApiBaseUrlValue","_useMutation","useMutation","FETCH_METHOD","addCartMutation","mutation","addCartResponseData","data","cartItem","useCartItemValue","id","setCheckedState","useSetCheckedState","useEffect","cartItemId","setCart","prev","concat","_toConsumableArray","product","_defineProperty","useSetCartState","ProductImage","path","imageUrl","ProductInfo","ProductName","name","ProductPrice","localeString","price","LOCALE","StepperWrapper","CartIconWrapper","FETCH_URL","productId","CartIcon","fill","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","products","useQuery","map","method","_useState","useState","_useState2","_slicedToArray","state","setState","error","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","bodyData","response","body","wrap","_context","next","fetch","headers","Authorization","btoa","process","JSON","stringify","sent","ok","json","t0","console","log","stop","_x","_x2","apply","arguments","updateQuantityMutation","deleteCartMutation","deleteCartItem","_len","length","Array","_key","filter","includes","forEach","count","country","toLocaleString"],"sourceRoot":""}