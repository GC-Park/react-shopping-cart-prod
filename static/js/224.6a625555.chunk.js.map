{"version":3,"file":"static/js/224.6a625555.chunk.js","mappings":"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","sources":["recoils/recoilTotalPrice.ts","components/common/ToastMessage.tsx","components/order/OrderSummary.tsx"],"sourcesContent":["import { selector, useRecoilValue } from 'recoil';\n\nimport { CartState } from './recoilCart';\n\nimport { RECOIL_KEY } from '../constants';\nimport { CheckedState } from './recoilChecked';\n\nconst TotalProductPrice = selector({\n  key: RECOIL_KEY.TOTAL_PRODUCT_PRICE_VALUE,\n  get: ({ get }) => {\n    const cart = get(CartState);\n    const checkedItems = get(CheckedState);\n\n    const totalProductPrice = cart.reduce((totalPrice, item) => {\n      if (checkedItems[item.id]) {\n        return totalPrice + item.quantity * item.product.price;\n      }\n\n      return totalPrice;\n    }, 0);\n\n    return totalProductPrice;\n  },\n});\n\nexport const useTotalProductPrice = () => useRecoilValue(TotalProductPrice);\n","import { ReactNode, useEffect } from 'react';\nimport { styled } from 'styled-components';\n\ninterface ToastMessageProps {\n  children: ReactNode;\n  setToast: (isToast:boolean) => void\n}\n\nexport const ToastMessage = ({children, setToast}: ToastMessageProps) => {\n    useEffect(()=>{\n        setTimeout(() => {\n            setToast(false);\n          }, 1500)\n    }, [setToast])\n    \n  return (\n    <Style.Container>\n      <Style.Text>{children}</Style.Text>\n    </Style.Container>\n  );\n};\n\nconst Style = {\n  Container: styled.div`\n    position: fixed;\n    z-index: 99;\n    top: 75%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 24rem;\n    height: 2.625rem;\n    border-radius: 10px;\n    box-shadow: 0 0 15px 0 var(--black-40);\n    background-color: #323232;\n  `,\n  Text: styled.div`\n    font-weight: bold;\n    letter-spacing: 0.29px;\n    text-align: center;\n    margin-top: 0.6rem;\n  `,\n};\n","import { styled } from 'styled-components';\n\nimport { useTotalProductPrice } from '../../recoils/recoilTotalPrice';\n\nimport { Button } from '../common/Button';\n\nimport { DELIVERY_CHARGE, FETCH_METHOD, LOCALE, ZERO } from '../../constants';\nimport { useCartStateValue, useSetCartState } from '../../recoils/recoilCart';\nimport { useApiBaseUrlValue } from '../../recoils/recoilApiBaseUrl';\nimport { useMutation } from '../../hooks/useMutation';\nimport { useSetCheckedState } from '../../recoils/recoilChecked';\nimport { useQuery } from '../../hooks/useQuery';\nimport { Discount, Point } from '../../types';\nimport { useState } from 'react';\nimport { localeString } from '../../utils/localeString';\nimport { ToastMessage } from '../common/ToastMessage';\n\nconst OrderSummary = () => {\n  const cart = useCartStateValue();\n  const [usePoint, setUsePoint] = useState<number>(0);\n\n  const baseUrl = useApiBaseUrlValue();\n  const { mutation } = useMutation(FETCH_METHOD.POST);\n\n  const { data: point } = useQuery<Point>(baseUrl + '/point', true);\n\n  const { data: discount } = useQuery<Discount>(baseUrl + '/order-policy', true);\n\n  const cartOrder = cart.map((product) => {\n    return { cartItemId: Number(product.id), quantity: product.quantity };\n  });\n\n  const setCart = useSetCartState();\n  const setChecked = useSetCheckedState();\n\n  const [toast, setToast] = useState(false);\n\n  const totalProductPrice = useTotalProductPrice();\n\n  if (!point || !discount) return <></>;\n\n  const postCart = {\n    totalProductsPrice: totalProductPrice,\n    shippingFee: totalProductPrice >= discount.freeShippingThreshold ? ZERO : DELIVERY_CHARGE,\n    usedPoint: usePoint,\n    order: cartOrder,\n  };\n\n  const orderOnClick = () => {\n    mutation(baseUrl + '/orders', postCart);\n\n    setCart([]);\n    setChecked({ all: true });\n\n    setToast(true);\n  };\n\n  const pointChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setUsePoint(Number(e.target.value));\n  };\n\n  return (\n    <>\n      <>\n        <Style.OrderSummary>\n          {toast && (\n            <ToastMessage setToast={setToast}>{'주문 등록이 완료되었습니다.'}</ToastMessage>\n          )}\n          <Style.OrderSummaryHeader>결제예상금액</Style.OrderSummaryHeader>\n          <Style.Content>\n            <Style.Prices>\n              <Style.Price>\n                <span>총 상품가격</span>\n                <span>{localeString(totalProductPrice, LOCALE.KOREA)}원</span>\n              </Style.Price>\n              <Style.Price>\n                <span>총 배송비</span>\n                <span>\n                  {totalProductPrice >= discount.freeShippingThreshold\n                    ? ZERO\n                    : localeString(DELIVERY_CHARGE, LOCALE.KOREA)}\n                  원\n                </span>\n              </Style.Price>\n              <Style.Price>\n                <span>보유 포인트</span>\n                <span>{point ? localeString(point.usablePoint, LOCALE.KOREA) + '원' : '0원'}</span>\n              </Style.Price>\n              <Style.Price>\n                <span>사용할 포인트</span>\n                <Style.PointWrapper>\n                  <Style.PointInput\n                    type=\"number\"\n                    value={usePoint === ZERO ? '' : usePoint}\n                    onChange={pointChange}\n                  />\n                  <span>{point?.usablePoint >= usePoint ? '' : '포인트가 부족합니다.'}</span>\n                </Style.PointWrapper>\n              </Style.Price>\n              <Style.Price>\n                <span>총 주문금액</span>\n                <span>\n                  {totalProductPrice >= discount.freeShippingThreshold\n                    ? localeString(totalProductPrice - usePoint, LOCALE.KOREA)\n                    : localeString(totalProductPrice + DELIVERY_CHARGE - usePoint, LOCALE.KOREA)}\n                  원\n                </span>\n              </Style.Price>\n            </Style.Prices>\n            <Button\n              designType=\"rectangle\"\n              onClick={orderOnClick}\n              disabled={Boolean(\n                totalProductPrice < usePoint ||\n                  (point?.usablePoint && point?.usablePoint < usePoint)\n              )}\n            >\n              주문하기\n            </Button>\n          </Style.Content>\n        </Style.OrderSummary>\n      </>\n      <>\n        <Mobile.OrderSummary>\n          {toast && (\n            <ToastMessage setToast={setToast}>{'주문 등록이 완료되었습니다.'}</ToastMessage>\n          )}\n          <Mobile.Prices>\n            <Mobile.Price>\n              <div>총 상품가격</div>\n              <div>{localeString(totalProductPrice, LOCALE.KOREA)}원</div>\n            </Mobile.Price>\n            <Mobile.Price>\n              <div>배송비</div>\n              <div>\n                {' '}\n                {totalProductPrice >= discount.freeShippingThreshold\n                  ? ZERO\n                  : localeString(DELIVERY_CHARGE, LOCALE.KOREA)}\n                원\n              </div>\n            </Mobile.Price>\n            <Mobile.Price>\n              <div>보유 포인트</div>\n              <div>{point ? localeString(point.usablePoint, LOCALE.KOREA) + '원' : '0원'}</div>\n            </Mobile.Price>\n            <Mobile.Price>\n              <div>총 주문금액</div>\n              <div>\n                {totalProductPrice >= discount.freeShippingThreshold\n                  ? localeString(totalProductPrice - usePoint, LOCALE.KOREA)\n                  : localeString(totalProductPrice + DELIVERY_CHARGE - usePoint, LOCALE.KOREA)}\n                원\n              </div>\n            </Mobile.Price>\n            <Mobile.Price>\n              <div>사용할 포인트</div>\n              <Mobile.PointWrapper>\n                <Mobile.PointInput\n                  type=\"number\"\n                  value={usePoint === ZERO ? '' : usePoint}\n                  onChange={pointChange}\n                />\n              </Mobile.PointWrapper>\n            </Mobile.Price>\n            <Mobile.Price>\n              <Mobile.PointWrapper>\n                <div>{point?.usablePoint >= usePoint ? '' : '포인트 초과'}</div>\n              </Mobile.PointWrapper>\n            </Mobile.Price>\n          </Mobile.Prices>\n          <Button\n            designType=\"rectangle\"\n            onClick={orderOnClick}\n            disabled={Boolean(\n              totalProductPrice < usePoint || (point?.usablePoint && point?.usablePoint < usePoint)\n            )}\n          >\n            주문하기\n          </Button>\n        </Mobile.OrderSummary>\n      </>\n    </>\n  );\n};\n\nconst Style = {\n  OrderSummary: styled.section`\n    position: -webkit-sticky;\n    position: sticky;\n    top: 100px;\n\n    width: 370px;\n    height: fit-content;\n\n    margin-top: 45px;\n\n    border: 1px solid var(--grey-200);\n\n    @media screen and (max-width: 500px) {\n      display: none;\n    }\n  `,\n\n  OrderSummaryHeader: styled.h2`\n    padding: 22px 30px;\n\n    border-bottom: 3px solid var(--grey-200);\n\n    color: var(--grey-400);\n\n    font-size: 24px;\n\n    letter-spacing: 0.5px;\n  `,\n\n  Content: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n\n    padding: 36px;\n  `,\n\n  Prices: styled.div`\n    padding: 0 6px;\n\n    width: 100%;\n  `,\n\n  Price: styled.div`\n    display: flex;\n    justify-content: space-between;\n\n    width: 100%;\n\n    margin-bottom: 42px;\n\n    font-style: normal;\n    font-weight: 700;\n    font-size: 18px;\n\n    letter-spacing: 0.5px;\n\n    &:first-child,\n    &:nth-child(3) {\n      margin-bottom: 20px;\n    }\n  `,\n\n  PointWrapper: styled.div`\n    display: flex;\n    flex-direction: column;\n\n    & > span {\n      margin-top: 9px;\n      color: red;\n      font-size: 9px;\n      text-align: center;\n    }\n  `,\n\n  PointInput: styled.input`\n    width: 120px;\n    height: 32px;\n    font-size: 15px;\n\n    text-align: right;\n\n    border: 0.5px solid gray;\n\n    background-color: rgb(245, 245, 245);\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  `,\n};\n\nconst Mobile = {\n  OrderSummary: styled.div`\n    position: fixed;\n    bottom: 0;\n    right: 0;\n\n    display: flex;\n    justify-content: space-between;\n\n    width: 100%;\n    height: 150px;\n\n    padding: 16px;\n\n    background-color: var(--grey-500);\n    color: var(--grey-100);\n\n    border-top: 2px solid var(--grey-400);\n\n    z-index: 100;\n\n    @media screen and (min-width: 501px) {\n      display: none;\n    }\n  `,\n\n  Prices: styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n\n    width: 100%;\n  `,\n\n  Price: styled.div`\n    display: flex;\n    flex-direction: column;\n\n    justify-content: center;\n    align-items: center;\n\n    font-size: 12px;\n\n    & > div {\n      display: inline-block;\n    }\n\n    & > div:last-child {\n      font-weight: 600;\n      margin-top: 10px;\n    }\n  `,\n\n  PointWrapper: styled.div`\n    display: flex;\n    flex-direction: row;\n\n    & > div {\n      margin-top: 9px;\n      color: red;\n      font-size: 9px;\n      text-align: center;\n    }\n  `,\n\n  PointInput: styled.input`\n    width: 100px;\n    height: 15px;\n    font-size: 15px;\n\n    text-align: right;\n\n    border: 0.5px solid gray;\n\n    background-color: rgb(245, 245, 245);\n\n    &::-webkit-outer-spin-button,\n    &::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n      margin: 0;\n    }\n  `,\n};\n\nexport default OrderSummary;\n"],"names":["TotalProductPrice","selector","key","RECOIL_KEY","get","_ref","cart","CartState","checkedItems","CheckedState","reduce","totalPrice","item","id","quantity","product","price","ToastMessage","children","setToast","useEffect","setTimeout","_jsx","Style","Container","Text","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","OrderSummary","OrderSummaryHeader","Content","_templateObject3","Prices","_templateObject4","Price","_templateObject5","PointWrapper","_templateObject6","PointInput","_templateObject7","Mobile","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","useCartStateValue","_useState","useState","_useState2","_slicedToArray","usePoint","setUsePoint","baseUrl","useApiBaseUrlValue","mutation","useMutation","FETCH_METHOD","point","useQuery","data","discount","cartOrder","map","cartItemId","Number","setCart","useSetCartState","setChecked","useSetCheckedState","_useState3","_useState4","toast","totalProductPrice","useRecoilValue","_Fragment","postCart","totalProductsPrice","shippingFee","freeShippingThreshold","ZERO","DELIVERY_CHARGE","usedPoint","order","orderOnClick","all","pointChange","e","target","value","_jsxs","localeString","LOCALE","usablePoint","type","onChange","Button","designType","onClick","disabled","Boolean"],"sourceRoot":""}