{"version":3,"file":"static/js/779.c7ab229d.chunk.js","mappings":"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","sources":["components/order/OrderedProduct.tsx","components/order/OrderedProductList.tsx","components/order/OrderedProductTotalPrice.tsx","components/pages/OrderDetail.tsx","recoils/recoilOrderDetail.ts","utils/localeString.ts"],"sourcesContent":["import { styled } from 'styled-components';\nimport { LOCALE } from '../../constants';\nimport { OrderDetailsType } from '../../types';\nimport { localeString } from '../../utils/localeString';\n\ninterface OrderedProductProps {\n  orderDetail: OrderDetailsType;\n}\n\nexport const OrderedProduct = ({ orderDetail }: OrderedProductProps) => {\n  return (\n    <Style.Product>\n      <Style.ProductImage path={orderDetail.product.imageUrl} />\n      <Style.ProductInformation>\n        <Style.ProductName>{orderDetail.product.name}</Style.ProductName>\n        <Style.ProductPriceAndQuantity>\n          {localeString(orderDetail.product.price, LOCALE.KOREA)}원 / 수량 : {orderDetail.quantity}개\n        </Style.ProductPriceAndQuantity>\n      </Style.ProductInformation>\n    </Style.Product>\n  );\n};\n\nconst Style = {\n  Product: styled.div`\n    display: flex;\n\n    background: #ffffff;\n    border: 1px solid #aaaaaa;\n  `,\n\n  ProductImage: styled.div<{ path: string }>`\n    width: 141px;\n    height: 142px;\n\n    object-fit: cover;\n\n    margin: 40px 20px;\n\n    background-image: ${(props) => `url(${props.path})`};\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n\n    @media screen and (max-width: 500px) {\n      width: 96px;\n      height: 98px;\n\n      margin: 10px;\n    }\n  `,\n\n  ProductInformation: styled.div`\n    display: flex;\n    flex-direction: column;\n  `,\n\n  ProductName: styled.span`\n    font-size: 20px;\n    line-height: 24px;\n\n    letter-spacing: 0.5px;\n\n    margin: 42px 0 30px 0;\n\n    color: #333333;\n\n    @media screen and (max-width: 500px) {\n      margin: 30px 0 10px 0;\n    }\n  `,\n\n  ProductPriceAndQuantity: styled.span`\n    font-weight: 400;\n    font-size: 16px;\n    line-height: 20px;\n\n    letter-spacing: 0.5px;\n\n    color: #888888;\n\n    @media screen and (max-width: 500px) {\n      font-size: 15px;\n    }\n  `,\n};\n","import { useNavigate } from 'react-router-dom';\nimport { styled } from 'styled-components';\nimport { PATH } from '../../constants';\nimport { useSetOrderDetail } from '../../recoils/recoilOrderDetail';\nimport { UserOrdersType } from '../../types';\nimport { OrderedProduct } from './OrderedProduct';\n\ninterface OrderedProductProps {\n  order: UserOrdersType;\n  isDetail: boolean;\n}\n\nexport const OrderedProductList = ({ order, isDetail }: OrderedProductProps) => {\n  const setOrderNumber = useSetOrderDetail();\n\n  const navigate = useNavigate();\n\n  const detailOrderClick = () => {\n    setOrderNumber(order.orderId);\n\n    navigate(PATH.ORDER_DETAIL);\n  };\n  return (\n    <>\n      <Style.OrderNumberAndDetail>\n        <Style.OrderNumberAndDate>\n          <Style.OrderNumber>주문번호 : {order.orderId}</Style.OrderNumber>\n          <Style.OrderDate>주문날짜 : {order.orderDate.split(' ')[0]}</Style.OrderDate>\n        </Style.OrderNumberAndDate>\n        {isDetail ? '' : <Style.OrderDetail onClick={detailOrderClick}>상세보기</Style.OrderDetail>}\n      </Style.OrderNumberAndDetail>\n      <Style.OrderProducts>\n        {order.orderDetails &&\n          order.orderDetails.map((product) => (\n            <OrderedProduct key={product.product.id} orderDetail={product} />\n          ))}\n      </Style.OrderProducts>\n    </>\n  );\n};\n\nconst Style = {\n  OrderNumberAndDetail: styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 100%;\n    height: 92px;\n\n    padding: 0 30px;\n\n    background: #f6f6f6;\n    border: 1px solid #aaaaaa;\n\n    font-weight: 400;\n    font-size: 20px;\n    line-height: 24px;\n\n    letter-spacing: 0.5px;\n\n    @media screen and (max-width: 700px) {\n      font-size: 15px;\n    }\n  `,\n\n  OrderNumberAndDate: styled.div`\n    display: flex;\n  `,\n\n  OrderNumber: styled.span`\n    color: #333333;\n  `,\n\n  OrderDate: styled.span`\n    margin-left: 40px;\n\n    color: #333333;\n  `,\n\n  OrderDetail: styled.span`\n    text-align: right;\n\n    cursor: pointer;\n\n    color: #000000;\n  `,\n\n  OrderProducts: styled.div`\n    margin-bottom: 50px;\n  `,\n};\n","import { styled } from 'styled-components';\nimport { LOCALE } from '../../constants';\nimport { localeString } from '../../utils/localeString';\n\ninterface OrderedProductTotalPriceProps {\n  totalPrice: number;\n  usedPoint: number;\n  shippingFee: number;\n}\n\nexport const OrderedProductTotalPrice = ({\n  totalPrice,\n  usedPoint,\n  shippingFee,\n}: OrderedProductTotalPriceProps) => {\n  return (\n    <>\n      <Style.PaymentAmount>결제금액 정보</Style.PaymentAmount>\n      <Style.TotalPriceInformations>\n        <Style.Information>\n          <span>총 결제금액</span>\n          <span>{localeString((totalPrice - usedPoint + shippingFee), LOCALE.KOREA)}원</span>\n        </Style.Information>\n        <Style.Information>\n          <span>배송비</span>\n          <span>{localeString(shippingFee, LOCALE.KOREA)}원</span>\n        </Style.Information>\n        <Style.Information>\n          <span>사용한 포인트</span>\n          <span>{localeString(usedPoint, LOCALE.KOREA)}원</span>\n        </Style.Information>\n      </Style.TotalPriceInformations>\n    </>\n  );\n};\n\nconst Style = {\n  PaymentAmount: styled.div`\n    display: flex;\n    align-items: center;\n\n    width: 560px;\n    height: 92px;\n\n    padding: 0 30px;\n\n    background: #f6f6f6;\n    border: 1px solid #aaaaaa;\n\n    font-weight: 700;\n    font-size: 28px;\n    line-height: 28px;\n\n    letter-spacing: 0.5px;\n\n    color: #333333;\n\n    @media screen and (max-width: 700px) {\n      width: 500px;\n    }\n\n    @media screen and (max-width: 600px) {\n      width: 300px;\n\n      font-size: 20px;\n    }\n  `,\n\n  TotalPriceInformations: styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    align-items: center;\n\n    width: 560px;\n    height: 115px;\n\n    padding: 0 30px;\n\n    background: #ffffff;\n    border: 1px solid #aaaaaa;\n\n    @media screen and (max-width: 700px) {\n      width: 500px;\n    }\n\n    @media screen and (max-width: 600px) {\n      width: 300px;\n    }\n  `,\n\n  Information: styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n\n    width: 560px;\n\n    padding: 0 30px;\n\n    & > span {\n      font-size: 24px;\n      line-height: 24px;\n\n      color: #333333;\n    }\n\n    @media screen and (max-width: 700px) {\n      width: 500px;\n    }\n\n    @media screen and (max-width: 600px) {\n      width: 300px;\n\n      & > span {\n        font-weight: 400;\n        font-size: 15px;\n        line-height: 20px;\n\n        letter-spacing: 0.5px;\n\n        color: #333333;\n      }\n    }\n  `,\n};\n","import { styled } from 'styled-components';\nimport { useQuery } from '../../hooks/useQuery';\nimport { useApiBaseUrlValue } from '../../recoils/recoilApiBaseUrl';\nimport { useOrderDetailValue } from '../../recoils/recoilOrderDetail';\nimport { UserOrdersType } from '../../types';\n\nimport { Layout } from '../common/Layout';\nimport { OrderedProductList } from '../order/OrderedProductList';\nimport { OrderedProductTotalPrice } from '../order/OrderedProductTotalPrice';\n\nconst OrderDetail = () => {\n  const baseUrl = useApiBaseUrlValue();\n  const orderNumber = useOrderDetailValue();\n\n  const { data } = useQuery<UserOrdersType>(baseUrl + '/orders/' + orderNumber, true);\n\n  if (!data) return <></>;\n\n  return (\n    <Layout>\n      <Style.OrderDetailWrapper>\n        <Style.PageTitle>주문 내역 상세</Style.PageTitle>\n        <Style.Main>\n          <OrderedProductList order={data} isDetail={true} />\n        </Style.Main>\n        <Style.Price>\n          <OrderedProductTotalPrice\n            totalPrice={data.totalProductsPrice}\n            usedPoint={data.usedPoint}\n            shippingFee={data.shippingFee}\n          />\n        </Style.Price>\n      </Style.OrderDetailWrapper>\n    </Layout>\n  );\n};\n\nconst Style = {\n  OrderDetailWrapper: styled.div`\n    width: 100%;\n    padding: 0 10%;\n\n    margin-bottom: 140px;\n  `,\n\n  PageTitle: styled.div`\n    text-align: center;\n\n    margin-bottom: 30px;\n    padding: 0 0 30px 0;\n\n    font-size: 32px;\n    font-weight: 700;\n\n    border-bottom: 4px solid var(--grey-400);\n\n    @media screen and (max-width: 500px) {\n      font-size: 20px;\n      padding: 16px 0;\n    }\n  `,\n\n  Main: styled.div`\n    display: flex;\n    flex-direction: column;\n    @media screen and (min-width: 501px) {\n      justify-content: space-between;\n    }\n\n    @media screen and (max-width: 500px) {\n      font-size: 20px;\n\n      margin-bottom: 80px;\n    }\n  `,\n\n  Price: styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n\n    margin-top: 28px;\n\n    @media screen and (max-width: 700px) {\n      align-items: center;\n    }\n  `,\n};\n\nexport default OrderDetail;\n","import { atom, useRecoilState, useRecoilValue, useSetRecoilState } from 'recoil';\nimport { localStorageEffect } from './localStorageEffect';\n\nexport const OrderDetailState = atom<number>({\n  key: 'orderDetailState',\n  default: 0,\n  effects: [localStorageEffect('orderDetailNumber')],\n});\n\nexport const useOrderDetailState = () => useRecoilState(OrderDetailState);\n\nexport const useOrderDetailValue = () => useRecoilValue(OrderDetailState);\n\nexport const useSetOrderDetail = () => useSetRecoilState(OrderDetailState);\n","export const localeString = (value: number, country: string) => {\n    return value.toLocaleString(country)\n  };"],"names":["OrderedProduct","_ref","orderDetail","_jsxs","Style","Product","children","_jsx","ProductImage","path","product","imageUrl","ProductInformation","ProductName","name","ProductPriceAndQuantity","localeString","price","LOCALE","quantity","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","props","concat","_templateObject3","_templateObject4","_templateObject5","OrderedProductList","order","isDetail","setOrderNumber","useSetOrderDetail","navigate","useNavigate","_Fragment","OrderNumberAndDetail","OrderNumberAndDate","OrderNumber","orderId","OrderDate","orderDate","split","OrderDetail","onClick","PATH","OrderProducts","orderDetails","map","id","_templateObject6","OrderedProductTotalPrice","totalPrice","usedPoint","shippingFee","PaymentAmount","TotalPriceInformations","Information","OrderDetailWrapper","PageTitle","Main","Price","baseUrl","useApiBaseUrlValue","orderNumber","useOrderDetailValue","data","useQuery","Layout","totalProductsPrice","OrderDetailState","atom","key","default","effects","localStorageEffect","useRecoilValue","useSetRecoilState","value","country","toLocaleString"],"sourceRoot":""}